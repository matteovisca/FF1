services:

  webapp:
    image: ${WAPP_IMAGE_NAME}
    container_name: ${WAPP_CONTAINER_NAME}
    ports:
      - ${WAPP_CONTAINER_PORT}:5583
    networks:
      - default
    restart: always
    build:
      context: ../0583_Core
      dockerfile: ../0583_Core/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${WAPP_ASPNETCORE_ENVIRONMENT}
      - TZ=Europe/Rome
      - ConnectionStrings__SqlDbConnection=${WAPP_CONNECTION_STRING}
      - CUPS_SERVER=${CUPS_SERVER}
      - PrintSettings__CupsServerIp=${CUPS_SERVER_IP}
      - PrintSettings__CupsServerPort=${CUPS_SERVER_PORT}
      - PrintSettings__DefaultPrinterName=${DEFAULT_PRINTER_NAME}
      - PrintSettings__UseHttps=${USE_HTTPS}
    volumes:
      - /etc/vba/0583/:/etc/vba/0583/:rw
      - /var/log/vba/v0583/:/var/log/vba/v0583/:rw
      - ../0583_Configurations:/0583_Configurations:rw
      - ${CUPS_SOCKET_PATH}:/var/run/cups/cups.sock:rw
      - type: bind
        source: /media
        target: /media
        bind:
          propagation: shared

    expose:
      - 502
    labels:
      - traefik.enable=true
      - traefik.docker.network=${RMAPP_NETWORK_NAME}
      - traefik.http.routers.${WAPP_SERVICE_NAME}.rule=Host(`${WAPP_URL_PREFIX}.${DOMAIN_NAME}`)
      - traefik.http.routers.${WAPP_SERVICE_NAME}.entrypoints=${WAPP_TRAEFIK_ENTRYPOINT}
      - traefik.http.services.${WAPP_SERVICE_NAME}.loadbalancer.server.port=${WAPP_CONTAINER_PORT}

  db:
    image: ${DB_IMAGE_NAME}
    container_name: ${DB_CONTAINER_NAME}
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
    ports:
      - ${DB_CONTAINER_PORT}:5432
    networks:
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=${RMAPP_NETWORK_NAME}
      - traefik.http.routers.${DB_SERVICE_NAME}.rule=Host(`${DB_URL_PREFIX}.${DOMAIN_NAME}`)
      - traefik.http.routers.${DB_SERVICE_NAME}.entrypoints=${DB_TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.${DB_SERVICE_NAME}.service=${DB_SERVICE_NAME}
      - traefik.http.services.${DB_SERVICE_NAME}.loadbalancer.server.port=5432
    volumes:
      - ${DB_DATA_PATH}:/var/lib/postgresql/data:rw
      - ${DB_SCRIPTS_PATH}:/docker-entrypoint-initdb.d:rw
      - ${DB_BKP_PATH}:/tmp/bkp:rw


  # traefik:
  #   image: "traefik:v2.10.1"
  #   container_name: traefik
  #   restart: always
  #   networks:
  #     - default
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   volumes:
  #     - ${DOCKER_SOCKET_HOST}:${DOCKER_SOCKET_CNT}:ro

volumes:
  db_volume:
    name: ${DB_VOLUME_NAME}

networks:
  default:
    name: ${RMAPP_NETWORK_NAME}
    external: false
